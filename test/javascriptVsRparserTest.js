/**
 * compares the *_annot.json outputs generated by the R parsers of
 * the emuR package with the JavaScript parsers of the EMU-webApp.
 *	
 * @author: Raphael Winkelmann
 */
'use strict';

// load deps
var fs = require('fs');
var os = require('os');
var filewalker = require('filewalker');
var vm = require('vm');
var exec = require('child_process').exec;


// vars
var path2tg = '../app/testData/oldFormat/msajc003/msajc003.TextGrid';
var path2esps = '../app/testData/oldFormat/msajc003/msajc003.lab';

// sync read of file
var espsFile = fs.readFileSync(path2esps, 'utf8');
var tgFile = fs.readFileSync(path2tg, 'utf8');


function compareAnnotLevels (level1, level2) {
	if(level1.items.length !== level2.items.length){
		return ("Error: levels don't have the same amount of items in them");
	}

	for (var i = 0; i < level1.items.length; i++) {
		console.log(level1.items[i]);
	}
}


///////////////////////////////
///////////////////////////////
// espsParser comparison:

// read in external worker file
var tgp = fs.readFileSync('../app/scripts/workers/espsParserWorker.js', 'utf8');
// hack to remove addEventListner function
tgp = tgp.split('self.addEventListener(\'message\', function (e) {')[0];
// run in current context
vm.runInThisContext(tgp);

// use EMU-webApp parser
var espsJsoEmuWebApp = toJSO(espsFile, 'aNonExistentFile.wav', 'aRandomLevelName');

// TODO: use emuR parser


// compare the resulting first level
compareAnnotLevels(espsJsoEmuWebApp.levels[0], espsJsoEmuWebApp.levels[0]); // SIC SAME levels



// console.log(espsFile);
// console.log(JSON.stringify(espsJsoEmuWebApp, undefined, 1));





///////////////////////
// tgParser hack:

// read in external worker file
var tgp = fs.readFileSync('../app/scripts/workers/textGridParserWorker.js', 'utf8');
// hack to remove addEventListner function
tgp = tgp.split('self.addEventListener(\'message\', function (e) {')[0];
// run in current context
vm.runInThisContext(tgp);
